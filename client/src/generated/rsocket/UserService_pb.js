/* eslint-disable */
// source: UserService.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.solidice.rsocket.example.GetUserByIdRequest', null, global);
goog.exportSymbol('proto.com.solidice.rsocket.example.GetUserByIdResponse', null, global);
goog.exportSymbol('proto.com.solidice.rsocket.example.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.solidice.rsocket.example.User = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.solidice.rsocket.example.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.com.solidice.rsocket.example.User.displayName = 'proto.com.solidice.rsocket.example.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.solidice.rsocket.example.GetUserByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.com.solidice.rsocket.example.GetUserByIdRequest.displayName = 'proto.com.solidice.rsocket.example.GetUserByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.solidice.rsocket.example.GetUserByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.com.solidice.rsocket.example.GetUserByIdResponse.displayName = 'proto.com.solidice.rsocket.example.GetUserByIdResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.solidice.rsocket.example.User.prototype.toObject = function (opt_includeInstance) {
        return proto.com.solidice.rsocket.example.User.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.solidice.rsocket.example.User} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.com.solidice.rsocket.example.User.toObject = function (includeInstance, msg) {
        var f, obj = {
            email: jspb.Message.getFieldWithDefault(msg, 1, ""),
            username: jspb.Message.getFieldWithDefault(msg, 2, ""),
            id: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.solidice.rsocket.example.User}
 */
proto.com.solidice.rsocket.example.User.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.solidice.rsocket.example.User;
    return proto.com.solidice.rsocket.example.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.solidice.rsocket.example.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.solidice.rsocket.example.User}
 */
proto.com.solidice.rsocket.example.User.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setEmail(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUsername(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.solidice.rsocket.example.User.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.com.solidice.rsocket.example.User.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.solidice.rsocket.example.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.solidice.rsocket.example.User.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEmail();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getUsername();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getId();
    if (f !== 0) {
        writer.writeInt32(
            3,
            f
        );
    }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.com.solidice.rsocket.example.User.prototype.getEmail = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.solidice.rsocket.example.User.prototype.setEmail = function (value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.com.solidice.rsocket.example.User.prototype.getUsername = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.solidice.rsocket.example.User.prototype.setUsername = function (value) {
    jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 id = 3;
 * @return {number}
 */
proto.com.solidice.rsocket.example.User.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.com.solidice.rsocket.example.User.prototype.setId = function (value) {
    jspb.Message.setProto3IntField(this, 3, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.solidice.rsocket.example.GetUserByIdRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.com.solidice.rsocket.example.GetUserByIdRequest.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.solidice.rsocket.example.GetUserByIdRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.com.solidice.rsocket.example.GetUserByIdRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            id: jspb.Message.getFieldWithDefault(msg, 1, 0)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.solidice.rsocket.example.GetUserByIdRequest}
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.solidice.rsocket.example.GetUserByIdRequest;
    return proto.com.solidice.rsocket.example.GetUserByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.solidice.rsocket.example.GetUserByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.solidice.rsocket.example.GetUserByIdRequest}
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.com.solidice.rsocket.example.GetUserByIdRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.solidice.rsocket.example.GetUserByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getId();
    if (f !== 0) {
        writer.writeInt32(
            1,
            f
        );
    }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.com.solidice.rsocket.example.GetUserByIdRequest.prototype.getId = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.com.solidice.rsocket.example.GetUserByIdRequest.prototype.setId = function (value) {
    jspb.Message.setProto3IntField(this, 1, value);
};


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.com.solidice.rsocket.example.GetUserByIdResponse.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.com.solidice.rsocket.example.GetUserByIdResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.com.solidice.rsocket.example.GetUserByIdResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            user: (f = msg.getUser()) && proto.com.solidice.rsocket.example.User.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.solidice.rsocket.example.GetUserByIdResponse}
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.com.solidice.rsocket.example.GetUserByIdResponse;
    return proto.com.solidice.rsocket.example.GetUserByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.solidice.rsocket.example.GetUserByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.solidice.rsocket.example.GetUserByIdResponse}
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.com.solidice.rsocket.example.User;
                reader.readMessage(value, proto.com.solidice.rsocket.example.User.deserializeBinaryFromReader);
                msg.setUser(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.com.solidice.rsocket.example.GetUserByIdResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.solidice.rsocket.example.GetUserByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUser();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.com.solidice.rsocket.example.User.serializeBinaryToWriter
        );
    }
};


/**
 * optional User user = 1;
 * @return {?proto.com.solidice.rsocket.example.User}
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.getUser = function () {
    return /** @type{?proto.com.solidice.rsocket.example.User} */ (
        jspb.Message.getWrapperField(this, proto.com.solidice.rsocket.example.User, 1));
};


/** @param {?proto.com.solidice.rsocket.example.User|undefined} value */
proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.setUser = function (value) {
    jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.clearUser = function () {
    this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.solidice.rsocket.example.GetUserByIdResponse.prototype.hasUser = function () {
    return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.com.solidice.rsocket.example);
